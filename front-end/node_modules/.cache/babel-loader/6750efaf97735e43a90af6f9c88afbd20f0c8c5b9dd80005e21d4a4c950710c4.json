{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\617060213\\\\Desktop\\\\Thunderbolt\\\\front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter, Router, Routes, Route } from \"react-router-dom\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport Home from \"./components/Home\";\nimport List_images from \"./components/List_images\";\nimport IP_Whitelist from \"./components/IP_Whitelist\";\nimport Manage_containers from \"./components/Manage_container\";\nimport PrivateRoute from './PrivateRoute';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const checkAuth = () => {\n    // Implement your logic to check authentication status here\n    return isAuthenticated;\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Regisjter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 20\n        }, this),\n        isAuthenticated: checkAuth()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/List_images\",\n        element: /*#__PURE__*/_jsxDEV(List_images, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }, this),\n        isAuthenticated: checkAuth()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/Manage_containers\",\n        element: /*#__PURE__*/_jsxDEV(Manage_containers, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }, this),\n        isAuthenticated: checkAuth()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/IP_Whitelist\",\n        element: /*#__PURE__*/_jsxDEV(IP_Whitelist, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }, this),\n        isAuthenticated: checkAuth()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Register","Login","Home","List_images","IP_Whitelist","Manage_containers","PrivateRoute","React","useState","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","checkAuth","children","path","element","Regisjter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/617060213/Desktop/Thunderbolt/front-end/src/App.js"],"sourcesContent":["import { BrowserRouter,Router,Routes,Route } from \"react-router-dom\";\nimport Register from \"./components/Register\";\nimport Login from \"./components/Login\";\nimport Home from \"./components/Home\";\nimport List_images from \"./components/List_images\";\nimport IP_Whitelist from \"./components/IP_Whitelist\";\nimport Manage_containers from \"./components/Manage_container\";\nimport PrivateRoute from './PrivateRoute';\nimport React, { useState } from 'react';\n\n\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const checkAuth = () => {\n    // Implement your logic to check authentication status here\n    return isAuthenticated;\n  };\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Regisjter />} />\n        <Route path=\"/login\" element={<Login />} />\n        <PrivateRoute\n          path=\"/home\"\n          element={<Home />}\n          isAuthenticated={checkAuth()}\n        />\n        <PrivateRoute\n          path=\"/List_images\"\n          element={<List_images />}\n          isAuthenticated={checkAuth()}\n        />\n        <PrivateRoute\n          path=\"/Manage_containers\"\n          element={<Manage_containers />}\n          isAuthenticated={checkAuth()}\n        />\n        <PrivateRoute\n          path=\"/IP_Whitelist\"\n          element={<IP_Whitelist />}\n          isAuthenticated={checkAuth()}\n        />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}