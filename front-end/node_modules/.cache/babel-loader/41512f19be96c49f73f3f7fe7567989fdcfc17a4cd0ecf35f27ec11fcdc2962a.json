{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\617060213\\\\Desktop\\\\Thunderbolt\\\\front-end\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { BrowserRouter, Routes, Route } from 'react-router-dom';\n// import Register from './components/Login/Register/Register';\n// import Login from './components/Login/Register/Login';\n// import Home from './components/Home';\n// import List_images from './components/List_Images/List_images';\n// import MainComponent from './components/Container/MainComponent';\n// import MainComponent_IP from './components/IP_Whitelist/MainComponent_IP';\n\n// function App() {\n//   const [environment, setEnvironment] = useState(null); \n\n//   return (\n//     <div>\n//       <BrowserRouter>\n//         <Routes>\n//           <Route path=\"/home\" element={<Home />} />\n//           <Route path=\"/\" element={<Register />} />\n//           <Route path=\"/Login\" element={<Login />} />\n//           <Route path=\"/List_images\" element={<List_images />} />\n//           <Route path=\"/EnvironmentSelectionPage\" element={<MainComponent environment={environment} setEnvironment={setEnvironment} />} />\n//           <Route path=\"/EnvironmentSelection_IP\" element={<MainComponent_IP environment_ip={environment} setEnvironment={setEnvironment} />} />\n//         </Routes>\n//       </BrowserRouter>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport Register from './components/Login/Register/Register';\nimport Login from './components/Login/Register/Login';\nimport Home from './components/Home';\nimport List_images from './components/List_Images/List_images';\nimport MainComponent from './components/Container/MainComponent';\nimport MainComponent_IP from './components/IP_Whitelist/MainComponent_IP';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [environment, setEnvironment] = useState(null);\n  const handleLogin = () => {\n    // You need to implement your login logic here.\n    // For now, let's simulate a successful login.\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 35\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home/List_images\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(List_images, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 35\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/EnvironmentSelectionPage\",\n          element: /*#__PURE__*/_jsxDEV(MainComponent, {\n            environment: environment,\n            setEnvironment: setEnvironment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/EnvironmentSelection_IP\",\n          element: /*#__PURE__*/_jsxDEV(MainComponent_IP, {\n            environment_ip: environment,\n            setEnvironment: setEnvironment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6TYB82+7ZD9EqFtSyyiPuhSvEPg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Routes","Route","Navigate","Register","Login","Home","List_images","MainComponent","MainComponent_IP","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","environment","setEnvironment","handleLogin","children","path","element","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","to","environment_ip","_c","$RefreshReg$"],"sources":["C:/Users/617060213/Desktop/Thunderbolt/front-end/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { BrowserRouter, Routes, Route } from 'react-router-dom';\n// import Register from './components/Login/Register/Register';\n// import Login from './components/Login/Register/Login';\n// import Home from './components/Home';\n// import List_images from './components/List_Images/List_images';\n// import MainComponent from './components/Container/MainComponent';\n// import MainComponent_IP from './components/IP_Whitelist/MainComponent_IP';\n\n// function App() {\n//   const [environment, setEnvironment] = useState(null); \n\n//   return (\n//     <div>\n//       <BrowserRouter>\n//         <Routes>\n//           <Route path=\"/home\" element={<Home />} />\n//           <Route path=\"/\" element={<Register />} />\n//           <Route path=\"/Login\" element={<Login />} />\n//           <Route path=\"/List_images\" element={<List_images />} />\n//           <Route path=\"/EnvironmentSelectionPage\" element={<MainComponent environment={environment} setEnvironment={setEnvironment} />} />\n//           <Route path=\"/EnvironmentSelection_IP\" element={<MainComponent_IP environment_ip={environment} setEnvironment={setEnvironment} />} />\n//         </Routes>\n//       </BrowserRouter>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\nimport React, { useState } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport Register from './components/Login/Register/Register';\nimport Login from './components/Login/Register/Login';\nimport Home from './components/Home';\nimport List_images from './components/List_Images/List_images';\nimport MainComponent from './components/Container/MainComponent';\nimport MainComponent_IP from './components/IP_Whitelist/MainComponent_IP';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [environment, setEnvironment] = useState(null);\n\n  const handleLogin = () => {\n    // You need to implement your login logic here.\n    // For now, let's simulate a successful login.\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <div>\n      <BrowserRouter>\n        <Routes>\n          {/* Route for login */}\n          <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\n\n          {/* Private route for home */}\n          <Route\n            path=\"/home\"\n            element={isLoggedIn ? <Home /> : <Navigate to=\"/login\" />}\n          />\n\n          {/* Private route for List_images */}\n          <Route\n            path=\"/home/List_images\"\n            element={isLoggedIn ? <List_images /> : <Navigate to=\"/login\" />}\n          />\n\n          {/* Public routes */}\n          <Route path=\"/\" element={<Register />} />\n          <Route path=\"/EnvironmentSelectionPage\" element={<MainComponent environment={environment} setEnvironment={setEnvironment} />} />\n          <Route path=\"/EnvironmentSelection_IP\" element={<MainComponent_IP environment_ip={environment} setEnvironment={setEnvironment} />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}