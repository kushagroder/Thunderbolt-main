{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import './List_images.css';\n// import { useNavigate } from 'react-router-dom';\n\n// const ListImages = () => {\n//   const [imageData, setImageData] = useState([]);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     // Fetch JSON data from the URL\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch('http://localhost:8085/api/v1/employee/images');\n//         const data = await response.json();\n//         setImageData(data);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Profile Hub Deployment History</h1>\n//       {imageData.map((repository, index) => (\n//         <div key={index}>\n//           <h2>Service: {repository[0].repositoryName}</h2>\n//           <table>\n//             <thead>\n//               <tr>\n//                 <th>Tag</th>\n//                 <th>Repository</th>\n//                 <th>Pushed At</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {repository.map((image, index) => (\n//                 <tr key={index} className={image.isNew ? 'new' : ''}>\n//                   <td>{image.imageTag}</td>\n//                   <td>{image.repositoryName}</td>\n//                   <td>{image.imagePushedAt}</td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       ))}\n//       <button className=\"btn btn-primary\" onClick={() => navigate('/Home')}>Home</button>\n//     </div>\n//   );\n// };\n\n// export default ListImages;","map":{"version":3,"names":[],"sources":["C:/Users/617060213/Desktop/Thunderbolt/front-end/src/components/List_images.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import './List_images.css';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const ListImages = () => {\r\n//   const [imageData, setImageData] = useState([]);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     // Fetch JSON data from the URL\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await fetch('http://localhost:8085/api/v1/employee/images');\r\n//         const data = await response.json();\r\n//         setImageData(data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching data:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       <h1>Profile Hub Deployment History</h1>\r\n//       {imageData.map((repository, index) => (\r\n//         <div key={index}>\r\n//           <h2>Service: {repository[0].repositoryName}</h2>\r\n//           <table>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Tag</th>\r\n//                 <th>Repository</th>\r\n//                 <th>Pushed At</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {repository.map((image, index) => (\r\n//                 <tr key={index} className={image.isNew ? 'new' : ''}>\r\n//                   <td>{image.imageTag}</td>\r\n//                   <td>{image.repositoryName}</td>\r\n//                   <td>{image.imagePushedAt}</td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       ))}\r\n//       <button className=\"btn btn-primary\" onClick={() => navigate('/Home')}>Home</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ListImages;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}