{"ast":null,"code":"// import React, { useState } from 'react';\n// import './home.css';\n\n// function Manage_container({environment}) {\n//     const [showMessage, setShowMessage] = useState(false);\n//     const [message, setMessage] = useState('');\n//     const getActionUrl = (action) => {\n//                 if (environment === 'Development') {\n//                     return action === 'start' ? 'http://development-url/start' : 'http://development-url/stopcontainer';\n//                 } else if (environment === 'Testing') {\n//                     return action === 'start' ? 'http://testing-url/start' : 'http://testing-url/stopcontainer';\n//                 } else if (environment === 'Staging') {\n//                     return action === 'start' ? 'http://staging-url/start' : 'http://staging-url/stopcontainer';\n//                 } else if (environment === 'Production') {\n//                     return action === 'start' ? 'http://production-url/start' : 'http://production-url/stopcontainer';\n//                 } else {\n//                     return '';\n//                 }\n//     };\n//     const handleClick = (action) => {\n//         const url =getActionUrl(action);\n//         fetch(url, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({ action })\n//         })\n//         .then(response => {\n//             if (!response.ok) {\n//                 throw new Error('Network response was not ok');\n//             }\n//             // Handle successful response here\n//             setMessage(`Button \"${action}\" was pressed successfully!`);\n//             setShowMessage(true);\n//         })\n//         .catch(error => {\n//             console.error('There was a problem with your fetch operation:', error);\n//             // Handle error here\n//             setMessage(`An error occurred while pressing the button: ${error.message}`);\n//             setShowMessage(true);\n//         });\n//     };\n\n//     const functionalities = ['Start Containers', 'Stop Containers'];\n\n//     return (\n//         <div className=\"container\">\n//             <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/BT_logo_2019.svg/900px-BT_logo_2019.svg.png\" alt=\"BT Logo\" style={{ maxWidth: \"100px\", marginBottom: \"20px\" }} />\n//             <h1 className=\"title\">Home Page</h1>\n//             <ul>\n//                 {functionalities.map((functionality, index) => (\n//                     <li key={index}>\n//                         {functionality === 'Start Containers' ?\n//                             <button onClick={() => handleClick('start')}>{functionality}\n//                             </button> :\n//                             functionality === 'Stop Containers' ?\n\n//                             <button onClick={() => handleClick('stop')}>{functionality}</button> :\n//                                     functionality\n//                         }\n//                     </li>\n//                 ))}\n//             </ul>\n//             {showMessage && <p>{message}</p>}\n//             <div className=\"Home\">\n//                 <a href=\"/Home\"><i className=\"fas fa-sign-out-alt\"></i> Home</a>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Manage_container;\n\n// import React, { useState } from 'react';\n// import './home.css';\n\n// function Manage_Container({ environment }) {\n//     const [showMessage, setShowMessage] = useState(false);\n//     const [message, setMessage] = useState('');\n\n//     const getActionUrl = (action) => {\n//         if (environment === 'Development') {\n//             return action === 'start' ? 'http://development-url/start' : 'http://development-url/stopcontainer';\n//         } else if (environment === 'Testing') {\n//             return action === 'start' ? 'http://testing-url/start' : 'http://testing-url/stopcontainer';\n//         } else if (environment === 'Staging') {\n//             return action === 'start' ? 'http://staging-url/start' : 'http://staging-url/stopcontainer';\n//         } else if (environment === 'Production') {\n//             return action === 'start' ? 'http://production-url/start' : 'http://production-url/stopcontainer';\n//         } else {\n//             return '';\n//         }\n//     };\n\n//     const handleClick = (action) => {\n//         const url = getActionUrl(action);\n//         fetch(url, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({ action })\n//         })\n//         .then(response => {\n//             if (!response.ok) {\n//                 throw new Error('Network response was not ok');\n//             }\n//             // Handle successful response here\n//         })\n//         .catch(error => {\n//             console.error('There was a problem with your fetch operation:', error);\n//             // Handle error here\n//         });\n//     };\n\n//     return (\n//         <div className=\"container\">\n//             <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/BT_logo_2019.svg/900px-BT_logo_2019.svg.png\" alt=\"BT Logo\" style={{ maxWidth: \"100px\", marginBottom: \"20px\" }} />\n//             <h1 className=\"title\">Home Page</h1>\n//             <ul>\n//                 <li>\n//                     <button onClick={() => handleClick('start')}>Start Containers</button>\n//                 </li>\n//                 <li>\n//                     <button onClick={() => handleClick('stop')}>Stop Containers</button>\n//                 </li>\n//             </ul>\n//             {showMessage && <p>{message}</p>}\n//             <div className=\"Home\">\n//                 <a href=\"/Home\"><i className=\"fas fa-sign-out-alt\"></i> Home</a>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Manage_Container;","map":{"version":3,"names":[],"sources":["C:/Users/617060213/Desktop/Thunderbolt/front-end/src/components/Manage_container.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import './home.css';\r\n\r\n// function Manage_container({environment}) {\r\n//     const [showMessage, setShowMessage] = useState(false);\r\n//     const [message, setMessage] = useState('');\r\n//     const getActionUrl = (action) => {\r\n//                 if (environment === 'Development') {\r\n//                     return action === 'start' ? 'http://development-url/start' : 'http://development-url/stopcontainer';\r\n//                 } else if (environment === 'Testing') {\r\n//                     return action === 'start' ? 'http://testing-url/start' : 'http://testing-url/stopcontainer';\r\n//                 } else if (environment === 'Staging') {\r\n//                     return action === 'start' ? 'http://staging-url/start' : 'http://staging-url/stopcontainer';\r\n//                 } else if (environment === 'Production') {\r\n//                     return action === 'start' ? 'http://production-url/start' : 'http://production-url/stopcontainer';\r\n//                 } else {\r\n//                     return '';\r\n//                 }\r\n//     };\r\n//     const handleClick = (action) => {\r\n//         const url =getActionUrl(action);\r\n//         fetch(url, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({ action })\r\n//         })\r\n//         .then(response => {\r\n//             if (!response.ok) {\r\n//                 throw new Error('Network response was not ok');\r\n//             }\r\n//             // Handle successful response here\r\n//             setMessage(`Button \"${action}\" was pressed successfully!`);\r\n//             setShowMessage(true);\r\n//         })\r\n//         .catch(error => {\r\n//             console.error('There was a problem with your fetch operation:', error);\r\n//             // Handle error here\r\n//             setMessage(`An error occurred while pressing the button: ${error.message}`);\r\n//             setShowMessage(true);\r\n//         });\r\n//     };\r\n\r\n//     const functionalities = ['Start Containers', 'Stop Containers'];\r\n\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/BT_logo_2019.svg/900px-BT_logo_2019.svg.png\" alt=\"BT Logo\" style={{ maxWidth: \"100px\", marginBottom: \"20px\" }} />\r\n//             <h1 className=\"title\">Home Page</h1>\r\n//             <ul>\r\n//                 {functionalities.map((functionality, index) => (\r\n//                     <li key={index}>\r\n//                         {functionality === 'Start Containers' ?\r\n//                             <button onClick={() => handleClick('start')}>{functionality}\r\n//                             </button> :\r\n//                             functionality === 'Stop Containers' ?\r\n                            \r\n//                             <button onClick={() => handleClick('stop')}>{functionality}</button> :\r\n//                                     functionality\r\n//                         }\r\n//                     </li>\r\n//                 ))}\r\n//             </ul>\r\n//             {showMessage && <p>{message}</p>}\r\n//             <div className=\"Home\">\r\n//                 <a href=\"/Home\"><i className=\"fas fa-sign-out-alt\"></i> Home</a>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Manage_container;\r\n\r\n// import React, { useState } from 'react';\r\n// import './home.css';\r\n\r\n// function Manage_Container({ environment }) {\r\n//     const [showMessage, setShowMessage] = useState(false);\r\n//     const [message, setMessage] = useState('');\r\n\r\n//     const getActionUrl = (action) => {\r\n//         if (environment === 'Development') {\r\n//             return action === 'start' ? 'http://development-url/start' : 'http://development-url/stopcontainer';\r\n//         } else if (environment === 'Testing') {\r\n//             return action === 'start' ? 'http://testing-url/start' : 'http://testing-url/stopcontainer';\r\n//         } else if (environment === 'Staging') {\r\n//             return action === 'start' ? 'http://staging-url/start' : 'http://staging-url/stopcontainer';\r\n//         } else if (environment === 'Production') {\r\n//             return action === 'start' ? 'http://production-url/start' : 'http://production-url/stopcontainer';\r\n//         } else {\r\n//             return '';\r\n//         }\r\n//     };\r\n\r\n//     const handleClick = (action) => {\r\n//         const url = getActionUrl(action);\r\n//         fetch(url, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({ action })\r\n//         })\r\n//         .then(response => {\r\n//             if (!response.ok) {\r\n//                 throw new Error('Network response was not ok');\r\n//             }\r\n//             // Handle successful response here\r\n//         })\r\n//         .catch(error => {\r\n//             console.error('There was a problem with your fetch operation:', error);\r\n//             // Handle error here\r\n//         });\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/BT_logo_2019.svg/900px-BT_logo_2019.svg.png\" alt=\"BT Logo\" style={{ maxWidth: \"100px\", marginBottom: \"20px\" }} />\r\n//             <h1 className=\"title\">Home Page</h1>\r\n//             <ul>\r\n//                 <li>\r\n//                     <button onClick={() => handleClick('start')}>Start Containers</button>\r\n//                 </li>\r\n//                 <li>\r\n//                     <button onClick={() => handleClick('stop')}>Stop Containers</button>\r\n//                 </li>\r\n//             </ul>\r\n//             {showMessage && <p>{message}</p>}\r\n//             <div className=\"Home\">\r\n//                 <a href=\"/Home\"><i className=\"fas fa-sign-out-alt\"></i> Home</a>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Manage_Container;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}