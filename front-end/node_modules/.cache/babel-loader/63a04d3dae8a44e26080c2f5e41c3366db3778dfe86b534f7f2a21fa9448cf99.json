{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\617060213\\\\Desktop\\\\Thunderbolt\\\\front-end\\\\src\\\\components\\\\Manage_container.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './home.css';\n\n// function Manage_container({environment}) {\n//     const [showMessage, setShowMessage] = useState(false);\n//     const [message, setMessage] = useState('');\n//     const getActionUrl = (action) => {\n//                 if (environment === 'Development') {\n//                     return action === 'start' ? 'http://development-url/start' : 'http://development-url/stopcontainer';\n//                 } else if (environment === 'Testing') {\n//                     return action === 'start' ? 'http://testing-url/start' : 'http://testing-url/stopcontainer';\n//                 } else if (environment === 'Staging') {\n//                     return action === 'start' ? 'http://staging-url/start' : 'http://staging-url/stopcontainer';\n//                 } else if (environment === 'Production') {\n//                     return action === 'start' ? 'http://production-url/start' : 'http://production-url/stopcontainer';\n//                 } else {\n//                     return '';\n//                 }\n//     };\n//     const handleClick = (action) => {\n//         const url =getActionUrl(action);\n//         fetch(url, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({ action })\n//         })\n//         .then(response => {\n//             if (!response.ok) {\n//                 throw new Error('Network response was not ok');\n//             }\n//             // Handle successful response here\n//             setMessage(`Button \"${action}\" was pressed successfully!`);\n//             setShowMessage(true);\n//         })\n//         .catch(error => {\n//             console.error('There was a problem with your fetch operation:', error);\n//             // Handle error here\n//             setMessage(`An error occurred while pressing the button: ${error.message}`);\n//             setShowMessage(true);\n//         });\n//     };\n\n//     const functionalities = ['Start Containers', 'Stop Containers'];\n\n//     return (\n//         <div className=\"container\">\n//             <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/BT_logo_2019.svg/900px-BT_logo_2019.svg.png\" alt=\"BT Logo\" style={{ maxWidth: \"100px\", marginBottom: \"20px\" }} />\n//             <h1 className=\"title\">Home Page</h1>\n//             <ul>\n//                 {functionalities.map((functionality, index) => (\n//                     <li key={index}>\n//                         {functionality === 'Start Containers' ?\n//                             <button onClick={() => handleClick('start')}>{functionality}\n//                             </button> :\n//                             functionality === 'Stop Containers' ?\n\n//                             <button onClick={() => handleClick('stop')}>{functionality}</button> :\n//                                     functionality\n//                         }\n//                     </li>\n//                 ))}\n//             </ul>\n//             {showMessage && <p>{message}</p>}\n//             <div className=\"Home\">\n//                 <a href=\"/Home\"><i className=\"fas fa-sign-out-alt\"></i> Home</a>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Manage_container;\n\n// import React, { useState } from 'react';\n// import './home.css';\n\n// function Manage_Container({ environment }) {\n//     const [showMessage, setShowMessage] = useState(false);\n//     const [message, setMessage] = useState('');\n\n//     const getActionUrl = (action) => {\n//         if (environment === 'Development') {\n//             return action === 'start' ? 'http://development-url/start' : 'http://development-url/stopcontainer';\n//         } else if (environment === 'Testing') {\n//             return action === 'start' ? 'http://testing-url/start' : 'http://testing-url/stopcontainer';\n//         } else if (environment === 'Staging') {\n//             return action === 'start' ? 'http://staging-url/start' : 'http://staging-url/stopcontainer';\n//         } else if (environment === 'Production') {\n//             return action === 'start' ? 'http://production-url/start' : 'http://production-url/stopcontainer';\n//         } else {\n//             return '';\n//         }\n//     };\n\n//     const handleClick = (action) => {\n//         const url = getActionUrl(action);\n//         fetch(url, {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({ action })\n//         })\n//         .then(response => {\n//             if (!response.ok) {\n//                 throw new Error('Network response was not ok');\n//             }\n//             // Handle successful response here\n//         })\n//         .catch(error => {\n//             console.error('There was a problem with your fetch operation:', error);\n//             // Handle error here\n//         });\n//     };\n\n//     return (\n//         <div className=\"container\">\n//             <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/BT_logo_2019.svg/900px-BT_logo_2019.svg.png\" alt=\"BT Logo\" style={{ maxWidth: \"100px\", marginBottom: \"20px\" }} />\n//             <h1 className=\"title\">Home Page</h1>\n//             <ul>\n//                 <li>\n//                     <button onClick={() => handleClick('start')}>Start Containers</button>\n//                 </li>\n//                 <li>\n//                     <button onClick={() => handleClick('stop')}>Stop Containers</button>\n//                 </li>\n//             </ul>\n//             {showMessage && <p>{message}</p>}\n//             <div className=\"Home\">\n//                 <a href=\"/Home\"><i className=\"fas fa-sign-out-alt\"></i> Home</a>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default Manage_Container;\n\nimport React, { useState } from 'react';\nimport './home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Manage_container({\n  environment\n}) {\n  _s();\n  const [showMessage, setShowMessage] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleClick = action => {\n    const actionText = action === 'start' ? 'on' : 'off'; // Get action text based on start or stop\n    setMessage(`You pressed ${actionText} in ${environment}`); // Set the message\n    setShowMessage(true); // Show the message\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/BT_logo_2019.svg/900px-BT_logo_2019.svg.png\",\n      alt: \"BT Logo\",\n      style: {\n        maxWidth: \"100px\",\n        marginBottom: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Home Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleClick('start'),\n          children: \"Start Containers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleClick('stop'),\n          children: \"Stop Containers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), showMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Home\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/Home\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-sign-out-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 33\n        }, this), \" Home\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 9\n  }, this);\n}\n_s(Manage_container, \"XEk/h7ILtt6axjkOCxNE0jk23Ec=\");\n_c = Manage_container;\nexport default Manage_container;\nvar _c;\n$RefreshReg$(_c, \"Manage_container\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Manage_container","environment","_s","showMessage","setShowMessage","message","setMessage","handleClick","action","actionText","className","children","src","alt","style","maxWidth","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","_c","$RefreshReg$"],"sources":["C:/Users/617060213/Desktop/Thunderbolt/front-end/src/components/Manage_container.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import './home.css';\r\n\r\n// function Manage_container({environment}) {\r\n//     const [showMessage, setShowMessage] = useState(false);\r\n//     const [message, setMessage] = useState('');\r\n//     const getActionUrl = (action) => {\r\n//                 if (environment === 'Development') {\r\n//                     return action === 'start' ? 'http://development-url/start' : 'http://development-url/stopcontainer';\r\n//                 } else if (environment === 'Testing') {\r\n//                     return action === 'start' ? 'http://testing-url/start' : 'http://testing-url/stopcontainer';\r\n//                 } else if (environment === 'Staging') {\r\n//                     return action === 'start' ? 'http://staging-url/start' : 'http://staging-url/stopcontainer';\r\n//                 } else if (environment === 'Production') {\r\n//                     return action === 'start' ? 'http://production-url/start' : 'http://production-url/stopcontainer';\r\n//                 } else {\r\n//                     return '';\r\n//                 }\r\n//     };\r\n//     const handleClick = (action) => {\r\n//         const url =getActionUrl(action);\r\n//         fetch(url, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({ action })\r\n//         })\r\n//         .then(response => {\r\n//             if (!response.ok) {\r\n//                 throw new Error('Network response was not ok');\r\n//             }\r\n//             // Handle successful response here\r\n//             setMessage(`Button \"${action}\" was pressed successfully!`);\r\n//             setShowMessage(true);\r\n//         })\r\n//         .catch(error => {\r\n//             console.error('There was a problem with your fetch operation:', error);\r\n//             // Handle error here\r\n//             setMessage(`An error occurred while pressing the button: ${error.message}`);\r\n//             setShowMessage(true);\r\n//         });\r\n//     };\r\n\r\n//     const functionalities = ['Start Containers', 'Stop Containers'];\r\n\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/BT_logo_2019.svg/900px-BT_logo_2019.svg.png\" alt=\"BT Logo\" style={{ maxWidth: \"100px\", marginBottom: \"20px\" }} />\r\n//             <h1 className=\"title\">Home Page</h1>\r\n//             <ul>\r\n//                 {functionalities.map((functionality, index) => (\r\n//                     <li key={index}>\r\n//                         {functionality === 'Start Containers' ?\r\n//                             <button onClick={() => handleClick('start')}>{functionality}\r\n//                             </button> :\r\n//                             functionality === 'Stop Containers' ?\r\n                            \r\n//                             <button onClick={() => handleClick('stop')}>{functionality}</button> :\r\n//                                     functionality\r\n//                         }\r\n//                     </li>\r\n//                 ))}\r\n//             </ul>\r\n//             {showMessage && <p>{message}</p>}\r\n//             <div className=\"Home\">\r\n//                 <a href=\"/Home\"><i className=\"fas fa-sign-out-alt\"></i> Home</a>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Manage_container;\r\n\r\n// import React, { useState } from 'react';\r\n// import './home.css';\r\n\r\n// function Manage_Container({ environment }) {\r\n//     const [showMessage, setShowMessage] = useState(false);\r\n//     const [message, setMessage] = useState('');\r\n\r\n//     const getActionUrl = (action) => {\r\n//         if (environment === 'Development') {\r\n//             return action === 'start' ? 'http://development-url/start' : 'http://development-url/stopcontainer';\r\n//         } else if (environment === 'Testing') {\r\n//             return action === 'start' ? 'http://testing-url/start' : 'http://testing-url/stopcontainer';\r\n//         } else if (environment === 'Staging') {\r\n//             return action === 'start' ? 'http://staging-url/start' : 'http://staging-url/stopcontainer';\r\n//         } else if (environment === 'Production') {\r\n//             return action === 'start' ? 'http://production-url/start' : 'http://production-url/stopcontainer';\r\n//         } else {\r\n//             return '';\r\n//         }\r\n//     };\r\n\r\n//     const handleClick = (action) => {\r\n//         const url = getActionUrl(action);\r\n//         fetch(url, {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({ action })\r\n//         })\r\n//         .then(response => {\r\n//             if (!response.ok) {\r\n//                 throw new Error('Network response was not ok');\r\n//             }\r\n//             // Handle successful response here\r\n//         })\r\n//         .catch(error => {\r\n//             console.error('There was a problem with your fetch operation:', error);\r\n//             // Handle error here\r\n//         });\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/BT_logo_2019.svg/900px-BT_logo_2019.svg.png\" alt=\"BT Logo\" style={{ maxWidth: \"100px\", marginBottom: \"20px\" }} />\r\n//             <h1 className=\"title\">Home Page</h1>\r\n//             <ul>\r\n//                 <li>\r\n//                     <button onClick={() => handleClick('start')}>Start Containers</button>\r\n//                 </li>\r\n//                 <li>\r\n//                     <button onClick={() => handleClick('stop')}>Stop Containers</button>\r\n//                 </li>\r\n//             </ul>\r\n//             {showMessage && <p>{message}</p>}\r\n//             <div className=\"Home\">\r\n//                 <a href=\"/Home\"><i className=\"fas fa-sign-out-alt\"></i> Home</a>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Manage_Container;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport './home.css';\r\n\r\nfunction Manage_container({ environment }) {\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleClick = (action) => {\r\n        const actionText = action === 'start' ? 'on' : 'off'; // Get action text based on start or stop\r\n        setMessage(`You pressed ${actionText} in ${environment}`); // Set the message\r\n        setShowMessage(true); // Show the message\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cd/BT_logo_2019.svg/900px-BT_logo_2019.svg.png\" alt=\"BT Logo\" style={{ maxWidth: \"100px\", marginBottom: \"20px\" }} />\r\n            <h1 className=\"title\">Home Page</h1>\r\n            <ul>\r\n                <li>\r\n                    <button onClick={() => handleClick('start')}>Start Containers</button>\r\n                </li>\r\n                <li>\r\n                    <button onClick={() => handleClick('stop')}>Stop Containers</button>\r\n                </li>\r\n            </ul>\r\n            {showMessage && <p>{message}</p>}\r\n            <div className=\"Home\">\r\n                <a href=\"/Home\"><i className=\"fas fa-sign-out-alt\"></i> Home</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Manage_container;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,gBAAgBA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,WAAW,GAAIC,MAAM,IAAK;IAC5B,MAAMC,UAAU,GAAGD,MAAM,KAAK,OAAO,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;IACtDF,UAAU,CAAE,eAAcG,UAAW,OAAMR,WAAY,EAAC,CAAC,CAAC,CAAC;IAC3DG,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1B,CAAC;EAED,oBACIL,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBZ,OAAA;MAAKa,GAAG,EAAC,uGAAuG;MAACC,GAAG,EAAC,SAAS;MAACC,KAAK,EAAE;QAAEC,QAAQ,EAAE,OAAO;QAAEC,YAAY,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrLrB,OAAA;MAAIW,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCrB,OAAA;MAAAY,QAAA,gBACIZ,OAAA;QAAAY,QAAA,eACIZ,OAAA;UAAQsB,OAAO,EAAEA,CAAA,KAAMd,WAAW,CAAC,OAAO,CAAE;UAAAI,QAAA,EAAC;QAAgB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE,CAAC,eACLrB,OAAA;QAAAY,QAAA,eACIZ,OAAA;UAAQsB,OAAO,EAAEA,CAAA,KAAMd,WAAW,CAAC,MAAM,CAAE;UAAAI,QAAA,EAAC;QAAe;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACJjB,WAAW,iBAAIJ,OAAA;MAAAY,QAAA,EAAIN;IAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCrB,OAAA;MAAKW,SAAS,EAAC,MAAM;MAAAC,QAAA,eACjBZ,OAAA;QAAGuB,IAAI,EAAC,OAAO;QAAAX,QAAA,gBAACZ,OAAA;UAAGW,SAAS,EAAC;QAAqB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,SAAK;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAClB,EAAA,CA5BQF,gBAAgB;AAAAuB,EAAA,GAAhBvB,gBAAgB;AA8BzB,eAAeA,gBAAgB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}