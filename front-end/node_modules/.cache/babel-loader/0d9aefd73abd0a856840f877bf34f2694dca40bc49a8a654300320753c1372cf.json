{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\617060213\\\\Desktop\\\\Thunderbolt\\\\front-end\\\\src\\\\components\\\\IP_Whitelist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './IP_Whitelist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IPAddressForm = () => {\n  _s();\n  const [ipAddress, setIPAddress] = useState('');\n  const [responseMessage, setResponseMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Function to fetch the user's IP address\n  const fetchIPAddress = async () => {\n    try {\n      const response = await fetch('https://api.ipify.org?format=json');\n      const data = await response.json();\n      const userIPAddress = data.ip;\n      setIPAddress(userIPAddress);\n    } catch (error) {\n      setErrorMessage('Error fetching IP address');\n      console.error('Error:', error);\n    }\n  };\n  const handleChange = e => {\n    setIPAddress(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('your_post_endpoint_here', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ipAddress\n        })\n      });\n      const data = await response.json();\n      setResponseMessage(data.message);\n    } catch (error) {\n      setErrorMessage('Error sending request');\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"IP Address Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchIPAddress,\n      children: \"Get My IP Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter IP Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: ipAddress,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), responseMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Response: \", responseMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 27\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(IPAddressForm, \"Zs4BwVZ9Kb+tbzaIz/titqBzPkI=\");\n_c = IPAddressForm;\nexport default IPAddressForm;\nvar _c;\n$RefreshReg$(_c, \"IPAddressForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","IPAddressForm","_s","ipAddress","setIPAddress","responseMessage","setResponseMessage","errorMessage","setErrorMessage","fetchIPAddress","response","fetch","data","json","userIPAddress","ip","error","console","handleChange","e","target","value","handleSubmit","preventDefault","method","headers","body","JSON","stringify","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/617060213/Desktop/Thunderbolt/front-end/src/components/IP_Whitelist.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './IP_Whitelist.css';\r\n\r\nconst IPAddressForm = () => {\r\n  const [ipAddress, setIPAddress] = useState('');\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  // Function to fetch the user's IP address\r\n  const fetchIPAddress = async () => {\r\n    try {\r\n      const response = await fetch('https://api.ipify.org?format=json');\r\n      const data = await response.json();\r\n      const userIPAddress = data.ip;\r\n      setIPAddress(userIPAddress);\r\n    } catch (error) {\r\n      setErrorMessage('Error fetching IP address');\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setIPAddress(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('your_post_endpoint_here', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ ipAddress }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setResponseMessage(data.message);\r\n    } catch (error) {\r\n      setErrorMessage('Error sending request');\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>IP Address Form</h1>\r\n      <button onClick={fetchIPAddress}>Get My IP Address</button>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Enter IP Address:\r\n          <input\r\n            type=\"text\"\r\n            value={ipAddress}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n      {responseMessage && <p>Response: {responseMessage}</p>}\r\n      {errorMessage && <p>Error: {errorMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IPAddressForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}